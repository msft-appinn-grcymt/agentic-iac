name: Deploy Terraform Infrastructure

on:
  workflow_dispatch:
    inputs:
      organization:
        description: "Organization folder under apps/"
        required: true
        default: vzcorp
      project:
        description: "Project folder under apps/{organization}/"
        required: true
        default: agentsAssemble

permissions:
  id-token: write
  contents: read

#These environment variables are used by the terraform azure provider to setup OIDD authenticate. 
env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  
jobs:
  deploy-infra:
    name: "Deploy Terraform workload for ${{ inputs.organization }} / ${{ inputs.project }}"
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: true
      ARM_SKIP_PROVIDER_REGISTRATION: true
      ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login via Azure CLI using Federated Identity
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5
          terraform_wrapper: false

      - name: Terraform init
        working-directory: apps/${{ inputs.organization }}/${{ inputs.project }}
        run: terraform init # -upgrade

      - name: Terraform fmt check
        working-directory: apps/${{ inputs.organization }}/${{ inputs.project }}
        run: terraform fmt -check # -recursive

      - name: Terraform validate
        working-directory: apps/${{ inputs.organization }}/${{ inputs.project }}
        run: terraform validate

      - name: Terraform plan
        working-directory: apps/${{ inputs.organization }}/${{ inputs.project }}
        run: terraform plan -no-color -out=tfplan -input=false

      - name: Terraform apply
        working-directory: apps/${{ inputs.organization }}/${{ inputs.project }}
        run: terraform apply -input=false -auto-approve tfplan